partition3

C++ Code
----------------------------------

#include <bits/stdc++.h>

using namespace std;

bool findPartition(vector<int> &A, int ind, int s1, int s2, int s3, vector<vector<vector<vector<int>>>> *memo)
{
  if (ind < 0)
  {
    return (s1 == 0 && s2 == 0 && s3 == 0) ? 1 : 0;
  }
  if (s1 < 0 || s2 < 0 || s3 < 0)
    return 0;
  if ((*memo)[ind][s1][s2][s3] != -1)
    return (*memo)[ind][s1][s2][s3];
  bool t1 = 0, t2 = 0, t3 = 0;
  if (s1 - A[ind] >= 0)
    t1 = findPartition(A, ind - 1, s1 - A[ind], s2, s3, memo);
  if (s2 - A[ind] >= 0)
    t2 = findPartition(A, ind - 1, s1, s2 - A[ind], s3, memo);
  if (s3 - A[ind] >= 0)
    t3 = findPartition(A, ind - 1, s1, s2, s3 - A[ind], memo);
  (*memo)[ind][s1][s2][s3] = (t1 || t2 || t3);
  return (*memo)[ind][s1][s2][s3];
}

int partition3(vector<int> &A)
{
  int n = A.size(), sum = 0, i;
  for (i = 0; i < n; i++)
    sum += A[i];
  if (sum % 3 != 0)
    return 0;
  sum /= 3;
  vector<vector<vector<vector<int>>>> memo(n, vector<vector<vector<int>>>(sum + 1, vector<vector<int>>(sum + 1, vector<int>(sum + 1, -1))));

  return findPartition(A, n - 1, sum, sum, sum, &memo);
}

int main()
{
  int n;
  std::cin >> n;
  vector<int> A(n);
  for (size_t i = 0; i < A.size(); ++i)
  {
    std::cin >> A[i];
  }
  std::cout << partition3(A) << '\n';
}
